<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <property name="LOG_PATH" value="D:\\JavaWebLogs" />
    <!--设置系统日志目录-->
    <property name="APPDIR" value="cloud-base-service-customer" />
    <!-- 日志在工程中的输出位置 -->
    <property name="LOG_FILE" value="${BUILD_FOLDER:-build}/${springAppName}"/>​
    <!-- 控制台的日志输出样式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- 控制台Appender -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented out the console logs-->
            <level>debug</level>
        </filter>


        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- Appender to log to file -->​
    <!--<appender name="flatfile" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<file>${LOG_FILE}</file>-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--<fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>-->
    <!--<maxHistory>7</maxHistory>-->
    <!--</rollingPolicy>-->
    <!--<encoder>-->
    <!--<pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
    <!--<charset>utf8</charset>-->
    <!--</encoder>-->
    <!--</appender>-->
    ​
    <!-- 为logstash输出的json格式的Appender -->
    <!--<appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<file>${LOG_FILE}.json</file>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>-->
            <!--<maxHistory>7</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">-->
            <!--<providers>-->
                <!--<timestamp>-->
                    <!--<timeZone>UTC</timeZone>-->
                <!--</timestamp>-->
                <!--<pattern>-->
                    <!--<pattern>-->
                        <!--{-->
                        <!--"severity": "%level",-->
                        <!--"service": "${springAppName:-}",-->
                        <!--"trace": "%X{X-B3-TraceId:-}",-->
                        <!--"span": "%X{X-B3-SpanId:-}",-->
                        <!--"exportable": "%X{X-Span-Export:-}",-->
                        <!--"pid": "${PID:-}",-->
                        <!--"thread": "%thread",-->
                        <!--"class": "%logger{40}",-->
                        <!--"rest": "%message"-->
                        <!--}-->
                    <!--</pattern>-->
                <!--</pattern>-->
            <!--</providers>-->
        <!--</encoder>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
    <!--<appender name="FILEERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
        <!--<file>${LOG_PATH}/${APPDIR}/log_error.log</file>-->
        <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
            <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
            <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/error/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
            <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
            <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--<maxFileSize>2MB</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
        <!--<append>true</append>-->
        <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
            <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
        <!--&lt;!&ndash; 此日志文件只记录error级别的 &ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>error</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
    <!--<appender name="FILEWARN" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
        <!--<file>${LOG_PATH}/${APPDIR}/log_warn.log</file>-->
        <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
            <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
            <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/warn/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
            <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
            <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--<maxFileSize>2MB</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
        <!--<append>true</append>-->
        <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
            <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
        <!--&lt;!&ndash; 此日志文件只记录warn级别的 &ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>warn</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
    <!--<appender name="FILEINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
        <!--<file>${LOG_PATH}/${APPDIR}/log_info.log</file>-->
        <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
            <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
            <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/info/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
            <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
            <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--<maxFileSize>2MB</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
        <!--<append>true</append>-->
        <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
            <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
        <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>info</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
    <!--</appender>-->
    <!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
    <!--<appender name="FILEDEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
        <!--<file>${LOG_PATH}/${APPDIR}/log_debug.log</file>-->
        <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
            <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
            <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/info/log-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
            <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
            <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--<maxFileSize>2MB</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
        <!--</rollingPolicy>-->
        <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
        <!--<append>true</append>-->
        <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
            <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
            <!--<charset>utf-8</charset>-->
        <!--</encoder>-->
        <!--&lt;!&ndash; 此日志文件只记录debug级别的 &ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>debug</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
    <!--</appender>-->

    <!--<logger name="com.tgw360.controller.CustomerController">-->
        <!--<level>debug</level>-->
    <!--</logger>-->

    ​
    <root level="info">
        <appender-ref ref="console"/>
        <!--<appender-ref ref="logstash"/>-->
        <!--<appender-ref ref="FILEERROR" />-->
        <!--<appender-ref ref="FILEWARN" />-->
        <!--<appender-ref ref="FILEINFO" />-->
        <!--<appender-ref ref="FILEDEBUG" />-->
        <!--<appender-ref ref="flatfile"/>-->
    </root>
</configuration>