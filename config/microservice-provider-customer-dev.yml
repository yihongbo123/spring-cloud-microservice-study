spring:
  datasource:
    url: jdbc:mysql://172.18.44.122:3306/cloudTest?useUnicode=true&characterEncoding=utf8
    username: testuser
    password: test@tgw88
    driver-class-name: com.mysql.jdbc.Driver
  redis:
    cluster:
      nodes:
        - 172.18.44.122:6381
        - 172.18.44.122:6382
        - 172.18.44.123:6381
  jpa:
    hibernate:
#      DefaultNamingStrategy这个直接映射，不会做过多的处理（前提没有设置@Table，@Column等属性的时候）。
#      ImprovedNamingStrategy 表名，字段为小写，当有大写字母的时候会转换为分隔符号“_”。
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      #如果数据库没有表就创建，有数据表如果结构发生就更新
      ddl-auto: update
#    generate-ddl: false
#    show-sql: true
#    hibernate:
#      ddl-auto: none
#  datasource: # 指定数据源
#    platform: h2 # 指定数据源类型
#    schema: classpath:schema.sql # 指定h2数据库的建表脚本
#    data: classpath:data.sql # 指定h2数据库的insert脚本

#logging:
#  level:
#    root: INFO
#    org.hibernate: INFO
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#    com.itmuch.youran.persistence: ERROR
eureka:
  client:
    healthcheck:
    #eureka.client.healthcheck.enabled=true 只应该在application.yml中设置。
    #如果设置在bootstrap.yml中将会导致一些不良的副作用，例如在Eureka中注册的应用名称是UNKNOWN等。
      enabled: false #开启健康检查（需要spring-boot-starter-actuator依赖）
    serviceUrl:
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8761/eureka/ # 指定注册中⼼的地址
#  instance:
#    # leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
#    lease-expiration-duration-in-seconds: 10
#    # leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。默认30秒
#    lease-renewal-interval-in-seconds: 5


security:
  user:
    name: user
    password: 123456

