spring:
  redis:
    cluster:
      nodes: 172.18.44.120:6380,172.18.44.128:6380,172.18.44.123:6380,172.18.44.120:6381,172.18.44.128:6381,172.18.44.123:6381

#  jpa:
#    generate-ddl: false
#    show-sql: true
#    hibernate:
#      ddl-auto: none
#  datasource: # 指定数据源
#    platform: h2 # 指定数据源类型
#    schema: classpath:schema.sql # 指定h2数据库的建表脚本
#    data: classpath:data.sql # 指定h2数据库的insert脚本

#logging:
#  level:
#    root: INFO
#    org.hibernate: INFO
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#    com.itmuch.youran.persistence: ERROR

#  instance:
#    # leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
#    lease-expiration-duration-out-seconds: 10
#    # leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。默认30秒
#    lease-renewal-interval-out-seconds: 5

#mapper:
#  datasource:
#    url: jdbc:postgresql://127.0.0.1:26257/bank?sslmode=disable
#    username: maxroach
#    password:
#    driverClassName: org.postgresql.Driver
mapper:
  datasource:
    url: jdbc:mysql://172.18.44.120:3306/cloudTest?useUnicode=true&characterEncoding=utf8
    username: testuser
    password: '{cipher}AQCHPa8h9jNZMRDW/5uHDKlFKYLTHs/gfIub8wt8TVw1wvqT9zU+FgximkJ0jml6QZw3P5wWnI4W/NWi7yijuKJKOMRmfTlZeRldRfkv+0Nm1q3LS3UYo+3A9O3GFbU/iXWRnmF7v4iDlmQJUVk9bIKMF+lL9fcsNHV0L5aQoAUT2475PlQGXvDNLP7yjc9/al0asf/nBnIRLUSYmZFi5aTCr0j6RV6kfmaDAjROl7IexCao4/tnv/xxnWPgRBItZlqzqnZPv5sdiYEnx4YONCAREFsku07M95kM6qQVUvtMcL4Xd66+/I3UR+mv0nbqEjRo9fs/jsIT3odsacyXONq1XqrHLw53d9XHLJPrrsZsaqwWKFXIepUHMG3hZBEIS5A='
    driverClassName: com.mysql.jdbc.Driver

security:
  user:
    name: user
    password: 123456


#测试随机数
aa:
  value: '{cipher}AQCLzGBv7NeOxN6eOqHY50D8bZcoobZQEfxk6KelG7v8/7MCybvHh7QBOzsX7ETSjyK7hXrvag6HT5k52Wxc6KDa0SIVqcB4v6WFx9IFQ5utAuIFyAMVQ+iJigpHF++V+uDsY7IJkw1Jzhdm1FfGMst4LdVL380NoY4mkqb6eyoLayJJbgW7bloM+Dj3c1LCBvmifKTi+Wui2eNHCdCbwfXVjVHm8dFTZeYqzbFYyzhxC5TD8GAxSgOxC4udQ4TzF9FGdCe6u2FEz1olFcuYroVy6RCCiBX3mjLwSlFaFBpbbKY4hmwpMWggn7EUMzPKfc83ZlQ+thqHRk5sLylvRmOsIX5mFFnVgK/25t025f+SGeeNn4/GX9vW9V47h7IcYto='



